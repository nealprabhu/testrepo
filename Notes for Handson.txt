launch nodejs cmd prompt 
npm install @angular/cli -g
ng new my-app 
cd my-app
ng s -o
ng g c components/shared/header     
ng g c components/shared/footer -it -is 
ng g c components/shared/nav -is    ( TODO: ng-content ---refer my repo)
ng g c components/shared/header/search -is -it --flat --spec=false 
    update your app.comp.html -- layout 

Header, footer, nav Template page is here 
Refer: https://jsbin.com/gitufizacu/edit?html,js 

ng g c components/contacts -is 
ng g c components/contacts/add-contact -is 
ng g c components/contacts/contact-detail -is
Templates for the above components
Refer: https://jsbin.com/nericacepo/3/edit?html
=> Skip to Routing 

Install augury chrome extension 
https://chrome.google.com/webstore/detail/augury/elgalmkoelokbchhkhacckoklkejnhcd

A Note on Project Structure  ( Initial stage )
========
src/
  app/
    components/
      shared/
        header/
        footer/
        nav/
      contacts/
        add-contact/
        contact-details/
        ...
        ...
    services/
      contactService
    models/
    utils/
    



Routing  ( Single Page Application ) 
===========
Step 1: Add the links and set up paths in nav.component.html
<ul class="nav navbar-nav">
    <li class="active"><a href="/">Home</a></li>
    <li><a href="/directives">Directives</a></li>
    <li><a href="/contacts">Contacts</a></li>
</ul>

Step 2: Let's have the routes configured in app-routing.module.ts (prior import is needed)
const APP_ROUTES: Routes = [
  //syntax : path should have string and the component when that path is hit
  { path: '', component: ContactsComponent },
  { path: 'contacts', component: ContactsComponent },
  { path: 'contacts/new', component: AddContactComponent },
  { path: 'contacts/1', component: ContactDetailComponent }
]

Step 3: 
Add <router-outlet></router-outlet> in layout file (app.component.html)

Step 4: Check the app. The routes should work. But the page will reload. Let's fix it.
Instead of using <a href> use <a routerLink> in nav.component.html. Now check the app. clicking on links should not reload the page.
 
Step 5: let's have active class. have routerLinkActive in li.
<li class="nav-item" routerLinkActive="active"> 
in all the li's.

Step 6: Now, when you see the navigation menu, active class will be added in another link also. 
Let's fix it.
    <li routerLinkActive="active" [routerLinkActiveOptions]="{exact: true}"><a routerLink="/">Home</a></li>

Step 7: TODO: Change the title for each link.
Step 8: TODO: Child / nested routing 
  Refer: https://github.com/arunprabu/ng4-july18/blob/master/Router%20Instructions%20-%20More%20-%20Child%20Routes.txt
  https://github.com/arunprabu/ng4-july18

Forms
=======
1) Template Driven forms 
    HTML template form 
    Adv: 
      1) easy 
      2) you will know whats happening 
    Disadvantages: 
      1) you wont have more control validation 
      2) not well suited if you deal with complex forms 

2) Data/Model driven 
   Reactive forms 
    created using TS 
    using angular's Form related classes
      Adv: 
        1) you will have more control over a form element incl,. validation 
      Disadvantages: 
        1) larger learning curve 


Forms in Angular Application
=============
  1) optimize the template form for ng 
  2) some kind of validations -- TODO: Arun
  Refer: https://codecraft.tv/courses/angular/forms/template-driven/

Today
======
Services
  ng g s services/contact 
  Http methods 
  Dependency Injection
Create Contact flow 

Tomorrow
======
Read all contacts - flow (15 mins)
read one contact - flow (15 mins )
update one contact - flow (30 mins )
  How to use jquery within ng?
  how to fire bootstrap modal with ng app using jquery? 
  duplicate the object

Interfaces
  ng g i models/IContact 
Classes 
  ng g cl utils/error 


last day
====
RXJS & Observables 
  What's Observable?
        It's a collection that returned over time. 
        It's a push, that sends multiple values
        Observable is like restaurant kitchen.
          placing order 10 pizza 
          waiter takes that order (10 pizza)
          kitchen food  (1 by 1 )- -observable 
          hand it over to waiter (  pizza + ketchup + tissue )
          waiter will give it you, the subscriber. (desk)
        If you subscribe to observable, it decides when to give information 
    Now, What's RxJs?
        Various method of operators, you can chain on Observables to filter data, sort, 
Arrow Function
  https://jsbin.com/bawibax/2/edit?js,console
Http vs HttpClient 
Pipes
  - transform info from one format to another 
  - ex: timestamp => human readable format 
      3453543453456 => Sat, 4th Jun 2000
      test => TEST
  - refer: about component 
Guards
  - protect the routes 
  - guards for the routes (one or more guards can protect one route)
Decorators
build & deployment 

Next class
===========
proper way to use jquery, bootstrap -- angular.json
--subscribe in search form 
Modules - ( datatables ) (7 minutes)
Reactive forms 
Form validation
unit testing 





Reactive Forms (later )
==================
Step1: Create FormGroup Model 
in ts file,
import { FormGroup, FormControl, Validators } from '@angular/forms';

contactForm: FormGroup;  // formName

constructor(){

}

ngOnInit(){
  //create a form 
  this.contactForm = new FormGroup({
    username: new FormControl(),
    phone: new FormControl('', Validators.required),
    email: new FormControl('', [
      Validators.required,
      Validators.email
    ])
  })
}

Step 2: In html form associate the formgroup model 
<form [formGroup]="contactForm">
  <input type="text" class="form-control" placeholder="Enter Full Name" formControlName="username"> 
</form>

Step3: Will see an error in console. 
Fix it by adding ReactiveFormsModule in app.module.ts

Step4: